{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Programing\\\\Node.js\\\\webapi2\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport GameCard from \"./GameCard\";\nimport { Jumbotron, Alert, Container, Row, Col, Button, Form, FormGroup, Label, Input, Modal, ModalHeader, ModalBody } from 'reactstrap';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        alertVisible: false\n      });\n      const query = \"/create?name=\".concat(this.state.title);\n      axios.get(query).then(result => {\n        console.log(result.data);\n\n        if (result.data === 'Not found') {\n          this.setState({\n            alertVisible: true\n          });\n        } else if (result.data === 'This game already exist in the database') {\n          alert(result.data);\n        }\n\n        this.getAllMovies();\n      }).catch(error => {\n        alert('Error: ', error);\n      });\n      this.toggle();\n    };\n\n    this.onFindGame = e => {\n      e.preventDefault();\n      this.setState({\n        alertVisible: false\n      });\n\n      if (e.target.value == \"\") {\n        this.getAllMovies();\n      } else {\n        const query = \"/findgame?name=\".concat(e.target.value);\n        axios.get(query).then(result => {\n          this.setState({\n            movies: result.data\n          });\n          console.log(result.data);\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.getAllMovies = () => {\n      axios.get(\"/games\").then(result => {\n        this.setState({\n          movies: result.data\n        });\n        console.log(this.state.movies);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.deleteRecord = value => {\n      console.log(\"to delete: \", value);\n      const query = \"/delete?id=\".concat(value);\n      axios.get(query).then(result => {\n        this.getAllMovies();\n      }).catch(error => {\n        alert(\"Error: \", error);\n      });\n    };\n\n    this.editRecord = (id, value, platform, genres) => {\n      const query = \"/update?id=\".concat(id, \"&text=\").concat(value, \"&platform=\").concat(platform, \"&genres=\").concat(genres);\n      console.log(query);\n      axios.get(query).then(result => {\n        this.getAllMovies();\n        console.log(\"updated\");\n      }).catch(error => {\n        alert(\"Error:\" + error);\n      });\n    };\n\n    this.state = {\n      alertVisible: false,\n      title: '',\n      movies: [{\n        screenshot: '',\n        name: 'hello',\n        id: 1\n      }],\n      modal: false,\n      currentPage: 1,\n      todosPerPage: 3\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onFindGame = this.onFindGame.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  //for popup\n  onDismiss() {\n    this.setState({\n      alertVisible: false\n    });\n  } //for form\n\n\n  // for form field\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.getAllMovies();\n  }\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.target.id)\n    });\n  } //https://www.codementor.io/blizzerand/building-forms-using-react-everything-you-need-to-know-iz3eyoq4y\n  //todo add buttons to delete rows\n  //https://codepen.io/aaronschwartz/pen/awOyQq?editors=0010\n  //https://github.com/react-tools/react-table/issues/324\n\n\n  render() {\n    const _this$state = this.state,\n          movies = _this$state.movies,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage; // Logic for displaying todos\n\n    const indexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n    const currentTodos = movies.slice(indexOfFirstTodo, indexOfLastTodo);\n    const renderTodos = currentTodos.map((movies, index) => {\n      return React.createElement(Col, {\n        xs: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(GameCard, {\n        removeGame: this.deleteRecord.bind(this),\n        editGame: this.editRecord.bind(this),\n        games: movies,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }));\n    }); // Logic for displaying page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(movies.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    const renderPageNumbers = pageNumbers.map(number => {\n      return React.createElement(\"li\", {\n        key: number,\n        id: number,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, number);\n    });\n\n    function HasGame() {\n      if (movies.length == 0) {\n        return React.createElement(\"div\", {\n          class: \"noGameDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: \"http://pm1.narvii.com/6688/d91c5f2917fe35c3862d2b2a8a2fc91c89e16450_00.jpg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"No result is found\")));\n      }\n\n      return React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Game Search\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Search for game\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"danger\",\n      isOpen: this.state.alertVisible,\n      toggle: this.onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, \"Game not found\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: \"9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"findGame\",\n      placeholder: \"Search a game title...\",\n      onChange: this.onFindGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(Col, {\n      sm: \"3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Request a game\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: \"modaltest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Request a game\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Add a Game\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      placeholder: \"enter game title...\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })), React.createElement(Button, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Submit\"))))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }, React.createElement(HasGame, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"page-items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, renderTodos)), React.createElement(\"ul\", {\n      id: \"page-numbers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, renderPageNumbers)))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\Programing\\Node.js\\webapi2\\client\\src\\App.js"],"names":["React","Component","axios","GameCard","Jumbotron","Alert","Container","Row","Col","Button","Form","FormGroup","Label","Input","Modal","ModalHeader","ModalBody","App","constructor","toggle","setState","modal","state","onSubmit","e","preventDefault","alertVisible","query","title","get","then","result","console","log","data","alert","getAllMovies","catch","error","onFindGame","target","value","movies","err","deleteRecord","editRecord","id","platform","genres","screenshot","name","currentPage","todosPerPage","onChange","bind","onDismiss","handleClick","componentDidMount","event","Number","render","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","renderTodos","map","index","pageNumbers","i","Math","ceil","length","push","renderPageNumbers","number","HasGame"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport GameCard from \"./GameCard\";\r\nimport {\r\n    Jumbotron,\r\n    Alert,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody\r\n} from 'reactstrap';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            alertVisible: false,\r\n            title: '',\r\n            movies: [{ screenshot: '', name: 'hello', id: 1 }],\r\n            modal: false,\r\n            currentPage: 1,\r\n            todosPerPage: 3\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onFindGame = this.onFindGame.bind(this);\r\n        this.onDismiss = this.onDismiss.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    //for popup\r\n    onDismiss() {\r\n        this.setState({ alertVisible: false });\r\n    }\r\n\r\n    //for form\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.setState({ alertVisible: false });\r\n\r\n        const query = `/create?name=${this.state.title}`;\r\n\r\n        axios\r\n            .get(query)\r\n            .then(result => {\r\n                console.log(result.data);\r\n                if (result.data === 'Not found') {\r\n                    this.setState({ alertVisible: true });\r\n                } else if (result.data === 'This game already exist in the database') {\r\n                    alert(result.data);\r\n                }\r\n                this.getAllMovies();\r\n            })\r\n            .catch(error => {\r\n                alert('Error: ', error);\r\n            });\r\n\r\n        this.toggle();\r\n    };\r\n\r\n    onFindGame = e => {\r\n\r\n        e.preventDefault();\r\n        this.setState({ alertVisible: false });\r\n\r\n        if (e.target.value == \"\") {\r\n\r\n            this.getAllMovies();\r\n        } else {\r\n            const query = `/findgame?name=${e.target.value}`;\r\n\r\n            axios.get(query).\r\n                then(result => {\r\n\r\n                    this.setState({ movies: result.data });\r\n                    console.log(result.data);\r\n\r\n                }).catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    // for form field\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n    }\r\n\r\n    getAllMovies = () => {\r\n        axios\r\n            .get(\"/games\")\r\n            .then(result => {\r\n                this.setState({ movies: result.data });\r\n                console.log(this.state.movies);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getAllMovies();\r\n    }\r\n\r\n    deleteRecord = value => {\r\n        console.log(\"to delete: \", value);\r\n        const query = `/delete?id=${value}`;\r\n        axios\r\n            .get(query)\r\n            .then(result => {\r\n                this.getAllMovies();\r\n            })\r\n            .catch(error => {\r\n                alert(\"Error: \", error);\r\n            });\r\n    };\r\n\r\n    editRecord = (id, value, platform, genres) => {\r\n\r\n        const query = `/update?id=${id}&text=${value}&platform=${platform}&genres=${genres}`;\r\n        console.log(query);\r\n        axios\r\n            .get(query)\r\n            .then(result => {\r\n                this.getAllMovies();\r\n                console.log(\"updated\");\r\n            }).catch(error => {\r\n\r\n                alert(\"Error:\" + error);\r\n            });\r\n\r\n    };\r\n\r\n    handleClick(event) {\r\n        this.setState({\r\n            currentPage: Number(event.target.id)\r\n        });\r\n    }\r\n\r\n    //https://www.codementor.io/blizzerand/building-forms-using-react-everything-you-need-to-know-iz3eyoq4y\r\n    //todo add buttons to delete rows\r\n    //https://codepen.io/aaronschwartz/pen/awOyQq?editors=0010\r\n    //https://github.com/react-tools/react-table/issues/324\r\n    render() {\r\n\r\n        const { movies, currentPage, todosPerPage } = this.state;\r\n\r\n        // Logic for displaying todos\r\n        const indexOfLastTodo = currentPage * todosPerPage;\r\n        const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\r\n        const currentTodos = movies.slice(indexOfFirstTodo, indexOfLastTodo);\r\n\r\n        const renderTodos = currentTodos.map((movies, index) => {\r\n            return (\r\n                <Col xs=\"4\">\r\n                    <GameCard\r\n                        removeGame={this.deleteRecord.bind(this)}\r\n                        editGame={this.editRecord.bind(this)}\r\n                        games={movies}\r\n                    />\r\n                </Col>\r\n\r\n            );\r\n        });\r\n\r\n        // Logic for displaying page numbers\r\n        const pageNumbers = [];\r\n        for (let i = 1; i <= Math.ceil(movies.length / todosPerPage); i++) {\r\n            pageNumbers.push(i);\r\n        }\r\n\r\n        const renderPageNumbers = pageNumbers.map(number => {\r\n            return (\r\n                <li\r\n                    key={number}\r\n                    id={number}\r\n                    onClick={this.handleClick}\r\n                >\r\n                    {number}\r\n                </li>\r\n            );\r\n        });\r\n\r\n        function HasGame(){\r\n            if(movies.length == 0){\r\n                \r\n                return(\r\n                    \r\n                    <div class=\"noGameDiv\">\r\n\r\n                        <img src=\"http://pm1.narvii.com/6688/d91c5f2917fe35c3862d2b2a8a2fc91c89e16450_00.jpg\">\r\n                            <p>No result is found</p>\r\n                        </img>\r\n                    </div>\r\n                \r\n                );\r\n            }\r\n\r\n            return(<br></br>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                <Container>\r\n                    <Jumbotron>\r\n                        <h1 className=\"display-4\">Game Search</h1>\r\n                        <p className=\"lead\">Search for game</p>\r\n                    </Jumbotron>\r\n                    <Row>\r\n                        <Col>\r\n                            <Alert\r\n                                color=\"danger\"\r\n                                isOpen={this.state.alertVisible}\r\n                                toggle={this.onDismiss}\r\n                            >\r\n                                Game not found\r\n                            </Alert>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col sm=\"9\">\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                id=\"findGame\"\r\n                                placeholder=\"Search a game title...\"\r\n                                onChange={this.onFindGame}\r\n                            />\r\n                        </Col>\r\n\r\n                        <Col sm=\"3\">\r\n                            <div>\r\n                                <Button color=\"success\" onClick={this.toggle}>Request a game</Button>\r\n                                <Modal isOpen={this.state.modal} toggle={this.toggle} className=\"modaltest\">\r\n                                    <ModalHeader toggle={this.toggle}>Request a game</ModalHeader>\r\n                                    <ModalBody>\r\n\r\n                                        <Form onSubmit={this.onSubmit}>\r\n                                            <FormGroup>\r\n                                                <Label for=\"title\">Add a Game</Label>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"title\"\r\n                                                    id=\"title\"\r\n                                                    placeholder=\"enter game title...\"\r\n                                                    onChange={this.onChange}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <Button color=\"primary\">Submit</Button>\r\n                                        </Form>\r\n\r\n                                    </ModalBody>\r\n                                </Modal>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <HasGame></HasGame>\r\n                        <div class=\"page-items\">\r\n                            <ul>\r\n                                <Row>\r\n                                    {renderTodos}\r\n                                </Row>\r\n\r\n                            </ul>\r\n                            <ul id=\"page-numbers\">\r\n                                {renderPageNumbers}\r\n                            </ul>\r\n                        </div>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}