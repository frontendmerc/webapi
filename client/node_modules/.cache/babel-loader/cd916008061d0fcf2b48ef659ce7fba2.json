{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Programing\\\\Node.js\\\\webapi2\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport GameCard from \"./GameCard\";\nimport { Jumbotron, Alert, Container, Row, Col, Button, Form, FormGroup, Label, Input, FormText, Pagination, PaginationItem, PaginationLink, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        alertVisible: false\n      });\n      const query = \"/create?name=\".concat(this.state.title);\n      axios.get(query).then(result => {\n        console.log(result.data);\n\n        if (result.data === 'Not found') {\n          this.setState({\n            alertVisible: true\n          });\n        } else if (result.data === 'This game already exist in the database') {\n          alert(result.data);\n        }\n\n        this.getAllMovies();\n      }).catch(error => {\n        alert('Error: ', error);\n      });\n    };\n\n    this.onFindGame = e => {\n      e.preventDefault();\n      this.setState({\n        alertVisible: false\n      });\n      const query = \"/findgame?name=\".concat(e.target.value);\n      console.log(query);\n      axios.get(query).then(result => {\n        this.setState({\n          movies: result.data\n        });\n        console.log(result.state.movies);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.getAllMovies = () => {\n      axios.get(\"/games\").then(result => {\n        this.setState({\n          movies: result.data\n        });\n        console.log(this.state.movies);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.deleteRecord = value => {\n      console.log(\"to delete: \", value);\n      const query = \"/delete?id=\".concat(value);\n      axios.get(query).then(result => {\n        this.getAllMovies();\n      }).catch(error => {\n        alert(\"Error: \", error);\n      });\n    };\n\n    this.editRecord = (id, value, platform, genres) => {\n      const query = \"/update?id=\".concat(id, \"&text=\").concat(value, \"&platform=\").concat(platform, \"&genres=\").concat(genres);\n      console.log(query);\n      axios.get(query).then(result => {\n        this.getAllMovies();\n        console.log(\"updated\");\n      }).catch(error => {\n        alert(\"Error:\" + error);\n      });\n    };\n\n    this.state = {\n      alertVisible: false,\n      title: '',\n      movies: [{\n        screenshot: '',\n        name: 'hello',\n        id: 1\n      }],\n      modal: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onFindGame = this.onFindGame.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n    this.toggle = this.toggle.bind(this);\n  }\n\n  //for popup\n  onDismiss() {\n    this.setState({\n      alertVisible: false\n    });\n  } //for form\n\n\n  // for form field\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.getAllMovies();\n  } // //execute after compoenent has mount\n  // componentDidUpdate(){\n  //     test();\n  // }\n\n\n  //https://www.codementor.io/blizzerand/building-forms-using-react-everything-you-need-to-know-iz3eyoq4y\n  //todo add buttons to delete rows\n  //https://codepen.io/aaronschwartz/pen/awOyQq?editors=0010\n  //https://github.com/react-tools/react-table/issues/324\n  render() {\n    let gameCards = this.state.movies.map(games => {\n      return React.createElement(Col, {\n        xs: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(GameCard, {\n        removeGame: this.deleteRecord.bind(this),\n        editGame: this.editRecord.bind(this),\n        games: games,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"display-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Game Search\"), React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Search for game\")), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Alert, {\n      color: \"danger\",\n      isOpen: this.state.alertVisible,\n      toggle: this.onDismiss,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Game not found\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Find Game\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"findGame\",\n      placeholder: \"enter game title...\",\n      onChange: this.onFindGame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Request a game\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: \"modaltest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Request a game\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Add a Game\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      id: \"title\",\n      placeholder: \"enter game title...\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), React.createElement(Button, {\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Submit\"))))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, gameCards)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\Programing\\Node.js\\webapi2\\client\\src\\App.js"],"names":["React","Component","axios","GameCard","Jumbotron","Alert","Container","Row","Col","Button","Form","FormGroup","Label","Input","FormText","Pagination","PaginationItem","PaginationLink","Modal","ModalHeader","ModalBody","ModalFooter","App","constructor","toggle","setState","modal","state","onSubmit","e","preventDefault","alertVisible","query","title","get","then","result","console","log","data","alert","getAllMovies","catch","error","onFindGame","target","value","movies","err","deleteRecord","editRecord","id","platform","genres","screenshot","name","onChange","bind","onDismiss","componentDidMount","render","gameCards","map","games"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport GameCard from \"./GameCard\";\r\nimport {\r\n    Jumbotron,\r\n    Alert,\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input,\r\n    FormText,\r\n    Pagination,\r\n    PaginationItem,\r\n    PaginationLink,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from 'reactstrap';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            alertVisible: false,\r\n            title: '',\r\n            movies: [{ screenshot: '', name: 'hello', id: 1 }],\r\n            modal: false\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onFindGame = this.onFindGame.bind(this);\r\n        this.onDismiss = this.onDismiss.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    //for popup\r\n    onDismiss() {\r\n        this.setState({ alertVisible: false });\r\n    }\r\n\r\n    //for form\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        this.setState({ alertVisible: false });\r\n\r\n        const query = `/create?name=${this.state.title}`;\r\n\r\n        axios\r\n            .get(query)\r\n            .then(result => {\r\n                console.log(result.data);\r\n                if (result.data === 'Not found') {\r\n                    this.setState({ alertVisible: true });\r\n                } else if (result.data === 'This game already exist in the database') {\r\n                    alert(result.data);\r\n                }\r\n                this.getAllMovies();\r\n            })\r\n            .catch(error => {\r\n                alert('Error: ', error);\r\n            });\r\n    };\r\n\r\n    onFindGame = e => {\r\n\r\n        e.preventDefault();\r\n        this.setState({ alertVisible: false });\r\n\r\n        const query = `/findgame?name=${e.target.value}`;\r\n        console.log(query);\r\n\r\n        axios.get(query).\r\n            then(result => {\r\n\r\n                this.setState({ movies: result.data });\r\n                console.log(result.state.movies);\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n    }\r\n\r\n    // for form field\r\n    onChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n\r\n    }\r\n\r\n    getAllMovies = () => {\r\n        axios\r\n            .get(\"/games\")\r\n            .then(result => {\r\n                this.setState({ movies: result.data });\r\n                console.log(this.state.movies);\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getAllMovies();\r\n    }\r\n\r\n    // //execute after compoenent has mount\r\n    // componentDidUpdate(){\r\n    //     test();\r\n    // }\r\n\r\n    deleteRecord = value => {\r\n        console.log(\"to delete: \", value);\r\n        const query = `/delete?id=${value}`;\r\n        axios\r\n            .get(query)\r\n            .then(result => {\r\n                this.getAllMovies();\r\n            })\r\n            .catch(error => {\r\n                alert(\"Error: \", error);\r\n            });\r\n    };\r\n\r\n    editRecord = (id, value, platform, genres) => {\r\n\r\n        const query = `/update?id=${id}&text=${value}&platform=${platform}&genres=${genres}`;\r\n        console.log(query);\r\n        axios\r\n            .get(query)\r\n            .then(result => {\r\n                this.getAllMovies();\r\n                console.log(\"updated\");\r\n            }).catch(error => {\r\n\r\n                alert(\"Error:\" + error);\r\n            });\r\n\r\n    };\r\n\r\n    //https://www.codementor.io/blizzerand/building-forms-using-react-everything-you-need-to-know-iz3eyoq4y\r\n    //todo add buttons to delete rows\r\n    //https://codepen.io/aaronschwartz/pen/awOyQq?editors=0010\r\n    //https://github.com/react-tools/react-table/issues/324\r\n    render() {\r\n\r\n        let gameCards = this.state.movies.map(games => {\r\n\r\n            return (\r\n                <Col xs=\"4\">\r\n                    <GameCard\r\n                        removeGame={this.deleteRecord.bind(this)}\r\n                        editGame={this.editRecord.bind(this)}\r\n                        games={games}\r\n                    />\r\n                </Col>\r\n\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <Container>\r\n                    <Jumbotron>\r\n                        <h1 className=\"display-4\">Game Search</h1>\r\n                        <p className=\"lead\">Search for game</p>\r\n                    </Jumbotron>\r\n                    <Row>\r\n                        <Col>\r\n                            <Alert\r\n                                color=\"danger\"\r\n                                isOpen={this.state.alertVisible}\r\n                                toggle={this.onDismiss}\r\n                            >\r\n                                Game not found\r\n                            </Alert>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n\r\n                            <Label for=\"title\">Find Game</Label>\r\n                            <Input\r\n                                type=\"text\"\r\n                                name=\"title\"\r\n                                id=\"findGame\"\r\n                                placeholder=\"enter game title...\"\r\n                                onChange={this.onFindGame}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Col>\r\n                            <div>\r\n                                <Button color=\"success\" onClick={this.toggle}>Request a game</Button>\r\n                                <Modal isOpen={this.state.modal} toggle={this.toggle} className=\"modaltest\">\r\n                                    <ModalHeader toggle={this.toggle}>Request a game</ModalHeader>\r\n                                    <ModalBody>\r\n\r\n                                        <Form onSubmit={this.onSubmit}>\r\n                                            <FormGroup>\r\n                                                <Label for=\"title\">Add a Game</Label>\r\n                                                <Input\r\n                                                    type=\"text\"\r\n                                                    name=\"title\"\r\n                                                    id=\"title\"\r\n                                                    placeholder=\"enter game title...\"\r\n                                                    onChange={this.onChange}\r\n                                                />\r\n                                            </FormGroup>\r\n                                            <Button color=\"primary\">Submit</Button>\r\n                                        </Form>\r\n\r\n                                    </ModalBody>\r\n                                </Modal>\r\n                            </div>\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        {gameCards}\r\n                    </Row>\r\n\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}