{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Programing\\\\Node.js\\\\webapi2\\\\client\\\\src\\\\GameCard.js\";\nimport React, { Component } from 'react';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { testFunction, editText } from './control';\nexport class GameCard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.toggleNested = () => {\n      this.setState({\n        nested: !this.state.nested,\n        close: false\n      });\n    };\n\n    this.toggleAll = () => {\n      this.setState({\n        nested: !this.state.nested,\n        close: true\n      });\n    };\n\n    this.delete = () => {\n      this.setState({\n        nested: !this.state.nested,\n        close: false\n      });\n      this.props.removeGame(this.props.games.id);\n    };\n\n    this.edit = () => {\n      console.log(this.props);\n      var resultArray = testFunction();\n      console.log(resultArray);\n      this.props.editGame(this.props.games.id, resultArray[0], resultArray[1]);\n    };\n\n    this.openEdit = () => {\n      editText();\n    };\n\n    this.state = {\n      modal: false,\n      nested: false,\n      close: false\n    };\n    this.toggle = this.toggle.bind(this);\n    this.toggleNested = this.toggleNested.bind(this);\n    this.toggleAll = this.toggleAll.bind(this);\n  }\n\n  render() {\n    function PlatformList(props) {\n      const numbers = props.platform;\n      const listItems = numbers.map(number => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, number));\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, listItems);\n    }\n\n    function TimeStamp(props) {\n      // Months array\n      var months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // Convert timestamp to milliseconds\n\n      var date = new Date(props.timeStamp * 1000); // Year\n\n      var year = date.getFullYear(); // Month\n\n      var month = months_arr[date.getMonth()]; // Day\n\n      var day = date.getDate(); // Display date time in MM-dd-yyyy format\n\n      var formattedTime = day + '-' + month + '-' + year;\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, formattedTime);\n    }\n\n    function GenresList(props) {\n      const numbers = props.genres;\n      const listItems = numbers.map(number => React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, number));\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, listItems);\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(CardImg, {\n      top: true,\n      width: \"20%\",\n      src: this.props.games.cover,\n      alt: \"Card image cap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.props.games.name), React.createElement(CardText, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.props.games.id), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Modal Test\"), React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      className: \"modaltest\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, this.props.games.name), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.games.cover,\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(Button, {\n      color: \"danger\",\n      onClick: this.toggleNested,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.openEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Edit\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      id: \"textarea\",\n      disabled: true,\n      width: \"100%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, this.props.games.summary), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"platformDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(PlatformList, {\n      platform: this.props.games.platform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"editPlatformDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"platformInput\",\n      type: \"text\",\n      name: \"plattform\",\n      defaultValue: this.props.games.platform,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), React.createElement(TimeStamp, {\n      timeStamp: this.props.games.first_release_date,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(GenresList, {\n      genres: this.props.games.genres,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      isOpen: this.state.nested,\n      toggle: this.toggleNested,\n      onClosed: this.state.close ? this.toggle : undefined,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Do you want to delete this?\"), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.delete,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Done\"), ' '))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"saveBtn\",\n      color: \"success\",\n      onClick: this.edit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Save\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Cancel\")))))));\n  }\n\n}\nexport default GameCard;","map":{"version":3,"sources":["C:\\Users\\User\\Desktop\\Programing\\Node.js\\webapi2\\client\\src\\GameCard.js"],"names":["React","Component","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","Modal","ModalHeader","ModalBody","ModalFooter","testFunction","editText","GameCard","constructor","props","toggle","setState","modal","state","toggleNested","nested","close","toggleAll","delete","removeGame","games","id","edit","console","log","resultArray","editGame","openEdit","bind","render","PlatformList","numbers","platform","listItems","map","number","TimeStamp","months_arr","date","Date","timeStamp","year","getFullYear","month","getMonth","day","getDate","formattedTime","GenresList","genres","cover","name","summary","first_release_date","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n\r\n    Card,\r\n    CardImg,\r\n    CardText,\r\n    CardBody,\r\n    CardTitle,\r\n    CardSubtitle,\r\n    Button\r\n} from 'reactstrap';\r\n\r\nimport {\r\n\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter\r\n} from 'reactstrap';\r\n\r\nimport { testFunction, editText } from './control'\r\n\r\nexport class GameCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: false,\r\n            nested: false,\r\n            close: false\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.toggleNested = this.toggleNested.bind(this);\r\n        this.toggleAll = this.toggleAll.bind(this);\r\n\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    }\r\n\r\n    toggleNested = () => {\r\n\r\n        this.setState({\r\n            nested: !this.state.nested,\r\n            close: false\r\n        });\r\n    }\r\n\r\n    toggleAll = () => {\r\n        this.setState({\r\n            nested: !this.state.nested,\r\n            close: true\r\n        });\r\n    }\r\n\r\n    delete = () => {\r\n\r\n        this.setState({\r\n            nested: !this.state.nested,\r\n            close: false\r\n        });\r\n\r\n        this.props.removeGame(this.props.games.id);\r\n    }\r\n\r\n    edit = () => {\r\n\r\n        console.log(this.props);\r\n        var resultArray = testFunction();\r\n        console.log(resultArray);\r\n        this.props.editGame(this.props.games.id, resultArray[0], resultArray[1]);\r\n    }\r\n\r\n    openEdit = () => {\r\n\r\n        editText();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        function PlatformList(props) {\r\n            const numbers = props.platform;\r\n            const listItems = numbers.map((number) =>\r\n                <li>{number}</li>\r\n            );\r\n            return (\r\n                <ul>{listItems}</ul>\r\n            );\r\n        }\r\n\r\n        function TimeStamp(props) {\r\n\r\n            // Months array\r\n            var months_arr = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n            // Convert timestamp to milliseconds\r\n            var date = new Date(props.timeStamp * 1000);\r\n            // Year\r\n            var year = date.getFullYear();\r\n            // Month\r\n            var month = months_arr[date.getMonth()];\r\n            // Day\r\n            var day = date.getDate();\r\n\r\n            // Display date time in MM-dd-yyyy format\r\n            var formattedTime = day + '-' + month + '-' + year;\r\n\r\n            return (\r\n                <p>{formattedTime}</p>\r\n            );\r\n        }\r\n\r\n        function GenresList(props) {\r\n\r\n            const numbers = props.genres;\r\n            const listItems = numbers.map((number) =>\r\n                <li>{number}</li>\r\n            );\r\n            return (\r\n                <ul>{listItems}</ul>\r\n            );\r\n        }\r\n\r\n        return (\r\n\r\n            <div>\r\n                <Card>\r\n                    <CardImg top width=\"20%\" src={this.props.games.cover} alt=\"Card image cap\" />\r\n                    <CardBody>\r\n\r\n                        <CardTitle>{this.props.games.name}</CardTitle>\r\n                        <CardText>{this.props.games.id}</CardText>\r\n\r\n                        <div>\r\n                            <Button color=\"danger\" onClick={this.toggle}>Modal Test</Button>\r\n                            <Modal isOpen={this.state.modal} toggle={this.toggle} className=\"modaltest\">\r\n                                <ModalHeader toggle={this.toggle}>{this.props.games.name}</ModalHeader>\r\n                                <ModalBody>\r\n                                    <img src={this.props.games.cover} width=\"100%\" />\r\n                                    <br />\r\n                                    <Button color=\"danger\" onClick={this.toggleNested}>Delete</Button>\r\n                                    <Button color=\"primary\" onClick={this.openEdit}>Edit</Button>\r\n                                    <br />\r\n\r\n                                    <textarea id=\"textarea\" disabled width=\"100%\" >{this.props.games.summary}</textarea>\r\n                                    <br />\r\n\r\n\r\n                                    <div>\r\n                                        <div id=\"platformDiv\">\r\n                                            <PlatformList platform={this.props.games.platform} />\r\n                                        </div>\r\n                                        <div id=\"editPlatformDiv\">\r\n                                            <input id=\"platformInput\" type=\"text\" name=\"plattform\" defaultValue={this.props.games.platform}></input>\r\n                                        </div>\r\n\r\n                                    </div>\r\n\r\n\r\n                                    <TimeStamp timeStamp={this.props.games.first_release_date} />\r\n\r\n                                    <GenresList genres={this.props.games.genres} />\r\n\r\n\r\n                                    <Modal isOpen={this.state.nested} toggle={this.toggleNested} onClosed={this.state.close ? this.toggle : undefined}>\r\n                                        <ModalHeader>Delete</ModalHeader>\r\n                                        <ModalBody>Do you want to delete this?</ModalBody>\r\n                                        <ModalFooter>\r\n                                            <Button color=\"primary\" onClick={this.delete}>Done</Button>{' '}\r\n                                        </ModalFooter>\r\n                                    </Modal>\r\n\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button id=\"saveBtn\" color=\"success\" onClick={this.edit}>Save</Button>{' '}\r\n                                    <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </Modal>\r\n                        </div>\r\n\r\n                    </CardBody>\r\n                </Card>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default GameCard;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}